<template>
  <div class="fr-container">
    <div class="fr-grid-row fr-grid-row--center fr-mt-4w">
      <div class="fr-col-md-8 fr-p-4v fr-background-alt--grey">

        <h1>Paiement en ligne</h1>

        <!-- Saisie numéro client -->
        <div class="fr-input-group">
          <label class="fr-label" for="numeroClient">Numéro client (optionnel)</label>
          <input
            class="fr-input"
            id="numeroClient"
            v-model="numeroClient"
            @blur="validerNumeroClient"
            placeholder="Ex : 1234567890"
          />
          <p class="fr-error-text" v-if="erreurNumeroClient">{{ erreurNumeroClient }}</p>
        </div>

        <!-- Choix type de paiement -->
        <div class="fr-select-group fr-mt-3w">
          <label class="fr-label" for="typePaiement">Type de paiement</label>
          <select class="fr-select" id="typePaiement" v-model="typePaiement" @change="onTypeChange">
            <option disabled value="">Sélectionner un type</option>
            <option value="webservice">Web service</option>
            <option value="url">URL</option>
            <option value="portail">Portail</option>
          </select>
        </div>

        <!-- Options spécifiques selon type -->
        <div v-if="typePaiement === 'url'" class="fr-mt-3w">
          <fieldset class="fr-fieldset">
            <legend class="fr-fieldset__legend">Options URL</legend>
            <div class="fr-radio-group">
              <input type="radio" id="avecFacture" value="avec" v-model="urlOption" />
              <label class="fr-label" for="avecFacture">Avec facture</label>
            </div>
            <div class="fr-radio-group">
              <input type="radio" id="sansFacture" value="sans" v-model="urlOption" />
              <label class="fr-label" for="sansFacture">Sans facture</label>
            </div>
          </fieldset>
        </div>

        <div v-if="typePaiement === 'portail'" class="fr-mt-3w">
          <div class="fr-select-group">
            <label class="fr-label" for="typeClient">Type client</label>
            <select class="fr-select" id="typeClient" v-model="typeClient">
              <option disabled value="">Sélectionner un type client</option>
              <option value="particulier">Particulier</option>
              <option value="entreprise">Entreprise</option>
            </select>
          </div>
        </div>

        <!-- Factures si nécessaire -->
        <div v-if="factures.length" class="fr-mt-3w">
          <label class="fr-label">Sélectionner une facture</label>
          <ul class="fr-mt-1w">
            <li v-for="facture in factures" :key="facture.id">
              <button class="fr-btn fr-btn--sm" @click="payerFacture(facture)">Payer {{ facture.reference }}</button>
            </li>
          </ul>
        </div>

        <!-- Formulaire auto-rempli -->
        <div v-if="formulaireAuto.rempli" class="fr-mt-3w">
          <h2>Informations paiement</h2>
          <div class="fr-input-group">
            <label class="fr-label">Nom client</label>
            <input class="fr-input" v-model="formulaireAuto.nom" />
          </div>
          <div class="fr-input-group fr-mt-2w">
            <label class="fr-label">Montant</label>
            <input class="fr-input" v-model="formulaireAuto.montant" />
          </div>
        </div>

        <!-- Bouton de paiement -->
        <div class="fr-mt-4w">
          <button class="fr-btn" @click="effectuerPaiement">Payer</button>
        </div>

      </div>
    </div>
  </div>
</template>

<script>
export default {
  data() {
    return {
      numeroClient: '',
      erreurNumeroClient: '',
      typePaiement: '',
      urlOption: '',
      typeClient: '',
      factures: [],
      formulaireAuto: {
        rempli: false,
        nom: '',
        montant: ''
      }
    };
  },
  methods: {
    validerNumeroClient() {
      if (this.numeroClient && !/^\d{10}$/.test(this.numeroClient)) {
        this.erreurNumeroClient = "Le numéro client doit contenir 10 chiffres.";
      } else {
        this.erreurNumeroClient = "";
        if (this.numeroClient) {
          this.recupererInfosClient();
        }
      }
    },
    async recupererInfosClient() {
      // Simuler un appel API
      // Remplacer par un vrai appel API vers votre backend
      console.log(`Récupération des infos client ${this.numeroClient}`);
      // Exemple fictif
      this.formulaireAuto = {
        rempli: true,
        nom: 'Jean Dupont',
        montant: '120.00'
      };
      if (this.typePaiement === 'url' && this.urlOption === 'avec') {
        this.factures = [
          { id: 1, reference: 'FACT123', montant: '120.00' },
          { id: 2, reference: 'FACT456', montant: '80.00' }
        ];
      }
    },
    onTypeChange() {
      // Réinitialiser les sous-options
      this.urlOption = '';
      this.typeClient = '';
      this.factures = [];
    },
    payerFacture(facture) {
      console.log(`Paiement facture ${facture.reference}`);
      // Simuler création URL paiement
      alert(`Redirection vers paiement pour ${facture.reference} - ${facture.montant}€`);
    },
    effectuerPaiement() {
      if (this.typePaiement === 'webservice') {
        console.log('Envoi des données au web service', this.formulaireAuto);
      } else if (this.typePaiement === 'url') {
        console.log('Génération URL paiement');
      } else if (this.typePaiement === 'portail') {
        console.log('Accès portail avec type client', this.typeClient);
      }
      // Appel API fictif
      alert("Paiement déclenché !");
    }
  }
};
</script>