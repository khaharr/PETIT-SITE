<template>
  <div class="fr-container fr-py-4w">
    <h1>Téléchargement de fichiers</h1>

    <!-- Sélections -->
    <div class="fr-grid-row fr-grid-row--gutters fr-mb-4w">
      <div class="fr-select-group fr-col-4">
        <label class="fr-label" for="type">Type de fichier</label>
        <select class="fr-select" v-model="selectedType" id="type">
          <option disabled value="">Sélectionner un type</option>
          <option>Entrée</option>
          <option>Sortie</option>
          <option>Log</option>
        </select>
      </div>

      <div class="fr-select-group fr-col-4">
        <label class="fr-label" for="env">Environnement</label>
        <select class="fr-select" v-model="selectedEnv" id="env">
          <option disabled value="">Sélectionner un environnement</option>
          <option>TIPI</option>
          <option>TIPI-CLIENT</option>
        </select>
      </div>

      <div class="fr-select-group fr-col-4">
        <label class="fr-label" for="zone">Zone</label>
        <select class="fr-select" v-model="selectedZone" id="zone">
          <option disabled value="">Sélectionner une zone</option>
          <option>ZA</option>
          <option>ZU</option>
        </select>
      </div>
    </div>

    <button class="fr-btn" @click="fetchFiles">Rechercher</button>

    <!-- Tableau de fichiers avec clir-auto-table -->
    <clir-auto-table
      v-if="files.length"
      class="fr-mt-4w"
      caption="Fichiers disponibles"
      captionTag="h4"
      :records="files"
      :fields="fields"
      :initialStatus="initialStatus"
      color="info"
      :readable="true"
      :editable="false"
      :deletable="false"
      :insertable="false"
      :refreshable="false"
      :printable="false"
      :downloadable="false"
      :sortable="true"
      :filtrable="true"
      :rowsByPageSelectable="true"
      :rowsByPageSelectableList="[5, 10, 20]"
      :customRenderers="[]"
    />

    <!-- Bouton de téléchargement -->
    <button class="fr-btn fr-btn--secondary fr-mt-3w" @click="downloadSelected">Télécharger sélection</button>
  </div>
</template>

<script>
export default {
  data() {
    return {
      selectedType: '',
      selectedEnv: '',
      selectedZone: '',
      files: [],
      fields: [
        {
          key: 'selected',
          label: '✔',
          alignment: 'center',
          tdClass: 'pe-2',
          type: 'checkbox'
        },
        { key: 'name', label: 'Nom du fichier', alignment: 'left' },
        {
          key: 'size',
          label: 'Taille (Ko)',
          alignment: 'right',
          tdClass: 'pe-2',
          formatter: (val) => (val / 1024).toFixed(2)
        }
      ],
      initialStatus: {
        currentPage: 1,
        rowsByPage: 5,
        sortBy: 'name',
        sortOrder: '',
        searchField: '',
        searchText: ''
      }
    }
  },
  methods: {
    fetchFiles() {
      if (!this.selectedType || !this.selectedEnv || !this.selectedZone) {
        alert('Veuillez remplir tous les champs.')
        return
      }

      // Simulation d’une réponse API
      this.files = [
        {
          name: `${this.selectedType}_fichier_1.txt`,
          size: 120000,
          selected: false
        },
        {
          name: `${this.selectedType}_rapport_2.pdf`,
          size: 450000,
          selected: false
        },
        {
          name: `${this.selectedType}_log_3.log`,
          size: 300000,
          selected: false
        }
      ]
    },

    downloadSelected() {
      const selectedFiles = this.files.filter((f) => f.selected)

      if (selectedFiles.length === 0) {
        alert('Aucun fichier sélectionné.')
        return
      }

      selectedFiles.forEach((file) => {
        console.log(`Simuler téléchargement de : ${file.name}`)
        // À remplacer plus tard par une requête backend + téléchargement réel
      })

      alert(`${selectedFiles.length} fichier(s) téléchargé(s) (simulation)`)
    }
  }
}
</script>